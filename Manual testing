Manualtesting questions 

1. Write 3 examples explaining importance of testing?

	It helps detect UI, usability, and functional issues that automation might miss.
    It‚Äôs essential for critical areas like payments, checkout flows, and mobile app behavior.

2. Write main difference between QA & QC? Where QA is applicable & where QC is applicable?    
| Aspect              | QA (Quality Assurance)                                                 | QC (Quality Control)                                                  |
| ------------------- | ---------------------------------------------------------------------- | --------------------------------------------------------------------- |
| **Definition**      | Process-oriented ‚Äì ensures proper processes to build quality software. | Product-oriented ‚Äì ensures the final product meets quality standards. |
| **Focus**           | Preventing defects.                                                    | Finding defects.                                                      |
| **When applicable** | During **software development process**.                               | During **testing and after build completion**.                        |



3.What is a Software Defect?
A software defect (bug) is a mismatch between the expected result and the actual result in the application.
It means the software does not behave as intended according to requirements.

4. Write a template for Test case.

| Field               | Description                               |
| ------------------- | ----------------------------------------- |
| **Test Case ID**    | Unique ID (e.g., TC_001)                  |
| **Test Scenario**   | Brief description of what is being tested |
| **Preconditions**   | Setup or conditions required before test  |
| **Test Steps**      | Steps to perform the test                 |
| **Expected Result** | What should happen                        |
| **Actual Result**   | What actually happened                    |
| **Status**          | Pass / Fail                               |
| **Comments**        | Additional notes (if any)                 |


5. Explain STLC. - Software Testing Life Cycle

STLC defines the sequence of steps to ensure software quality.
Phases:

Requirement Analysis

Test Planning

Test Case Design

Test Environment Setup

Test Execution

Defect Reporting

Test Closure

üß† It ensures testing is systematic and traceable.


6. Advantages of Agile over Waterfall Model

Agile is iterative & flexible, while Waterfall is linear & rigid.

Agile allows frequent feedback and early defect detection.

Working software is delivered in short cycles (sprints).

Encourages collaboration and adaptability to change.


7. Difference between SDLC and STLC ?

Aspect	    SDLC	                                                STLC
Full Form	Software Development Life Cycle               	        Software Testing Life Cycle
Focus	    Covers the entire development process	                Focuses only on testing phase
Stages	    Requirement ‚Üí Design ‚Üí Coding ‚Üí Testing ‚Üí Deployment	Requirement ‚Üí Test Planning ‚Üí Execution ‚Üí Closure
Goal	    Build the product	                                    Ensure the product‚Äôs quality


8. What is a Sprint in Agile? What is Scrum Meeting?

Sprint: A short, time-boxed period (usually 2‚Äì4 weeks) in which a specific set of features is developed and tested.

Scrum Meeting: A daily stand-up meeting (15 mins) to discuss progress, blockers, and next steps.


9.Explain about Kanban Board?

A Kanban Board is a visual tool used in Agile to track workflow.
It has columns like To Do ‚Üí In Progress ‚Üí Testing ‚Üí Done.
It helps teams visualize tasks, limit work in progress, and improve flow efficiency.



10.What is V-model?

The V-model is a software development model that emphasizes verification and validation.

The V-Model (Verification and Validation model) is an extension of the Waterfall model.
Each development phase has a corresponding testing phase arranged in a ‚ÄúV‚Äù shape.

Example:

Requirement ‚Üî Acceptance Testing

Design ‚Üî Integration Testing

Coding ‚Üî Unit Testing